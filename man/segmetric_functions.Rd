% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metric.R
\name{segmetric_functions}
\alias{segmetric_functions}
\alias{sm_read}
\alias{sm_clear}
\alias{sm_compute}
\alias{summary.segmetric}
\alias{sm_is_empty}
\title{General functions}
\usage{
sm_read(ref_sf, seg_sf)

sm_clear(m)

sm_compute(m, metric_id, ...)

\method{summary}{segmetric}(object, ...)

sm_is_empty(m)
}
\arguments{
\item{ref_sf}{A \code{sf} object. The reference polygons.}

\item{seg_sf}{A \code{sf} object. The segmentation polygons.}

\item{m}{A \code{segmetric} object.}

\item{metric_id}{A character. The name of a metric.}

\item{...}{Additional parameters. See details.}

\item{object}{A \code{segmetric} object.}
}
\description{
These functions manipulate \code{segmetric} objects.
\itemize{
\item \code{sm_read()} Load the reference and segmentation polygons into segmetric.
\item \code{sm_clear()} Remove the already calculated metrics from segmetric.
\item \code{sm_compute()} Compare the reference to the segmentation polygons using a metric.
\item \code{print()} Print a segmetric object.
\item \code{plot()} Plot the reference and segmentation polygons.
\item \code{summary()} Compute a measure of central tendency over the values of a metric.
\item \code{sm_is_empty()} Check if a \code{segmetric} object is empty.
}
}
\details{
\itemize{
\item{\code{F_measure} takes the optional weight argument \code{alpha}, which by
default is \code{0.5}. For more information check \code{sm_desc_metric("F_measure")}.
}
}
}
\examples{
# load sample datasets
data("sample_ref_sf", package = "segmetric")
data("sample_seg_sf", package = "segmetric")

# create segmetric object
m <- sm_read(ref_sf = sample_ref_sf, seg_sf = sample_seg_sf)

# plot geometries
plot(m)

# compute a metric
sm_compute(m, "AFI")

# summarize the metric using mean
sm_compute(m, "AFI") \%>\% summary()

# compute mean of three metrics and summarize
sm_compute(m, "OS1") \%>\%
  sm_compute("F_measure") \%>\%
  sm_compute("US2") \%>\%
  summary()

# clear computed subsets
sm_clear(m)

}
