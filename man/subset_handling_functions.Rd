% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subset.R
\name{subset_handling_functions}
\alias{subset_handling_functions}
\alias{.subset_check}
\alias{.subset_check.ref_sf}
\alias{.subset_check.seg_sf}
\alias{.subset_check.subset_sf}
\alias{sm_list}
\alias{sm_exists}
\alias{sm_subset}
\alias{sm_indirect}
\alias{sm_segmetric}
\alias{sm_get}
\alias{sm_ref}
\alias{sm_seg}
\alias{sm_inset}
\alias{sm_inset.ref_sf}
\alias{sm_inset.seg_sf}
\alias{sm_inset.subset_sf}
\title{Subset handling functions}
\usage{
.subset_check(s, allowed_types = c("ref_sf", "seg_sf", "subset_sf"))

\method{.subset_check}{ref_sf}(s, ...)

\method{.subset_check}{seg_sf}(s, ...)

\method{.subset_check}{subset_sf}(s, ...)

sm_list(m)

sm_exists(m, subset_id)

sm_subset(m, subset_id, expr = NULL)

sm_indirect(s)

sm_segmetric(s)

sm_get(m, subset_id)

sm_ref(m)

sm_seg(m)

sm_inset(x, y, return_index = FALSE)

\method{sm_inset}{ref_sf}(x, y, return_index = FALSE)

\method{sm_inset}{seg_sf}(x, y, return_index = FALSE)

\method{sm_inset}{subset_sf}(x, y, return_index = FALSE)
}
\arguments{
\item{s}{Either a \code{ref_sf}, a \code{seg_sf}, or a \code{subset_sf} object
(extension of \code{sf} class).}

\item{allowed_types}{A \code{character} vector containing one or more of
following values: "ref_sf", "seg_sf", "subset_sf".}

\item{...}{Additional parameter (not implemented).}

\item{m}{A \code{segmetric} object.}

\item{subset_id}{A \code{character} value informing a subset name.}

\item{expr}{A valid piece of code in R inside curly braces. This
code is evaluated to generate a subset, which must be provided in the
last line.}

\item{x}{Either a \code{ref_sf}, a \code{seg_sf}, or a \code{subset_sf} object
(extension of \code{sf} class).}

\item{y}{A \code{subset_sf} object.}

\item{return_index}{A \code{logical} value indicating if the corresponding rows
in \code{y} should be returned instead of actual corresponding values of \code{x}.}
}
\description{
These functions handles \code{subset_sf} objects stored in \code{segmetric} objects.
\itemize{
\item \code{sm_list()} lists subsets already computed.
\item \code{sm_exists()} verifies if a subset_id exists in a \code{segmetric} object.
\item \code{sm_subset()} evaluates and stores a \code{subset_sf} object.
\item \code{sm_indirect()} finds the subset_id of a given \code{subset_sf} object stored
in a \code{segmetric} object.
\item \code{sm_segmetric()} returns the \code{segmetric} object that stores a given
\code{subset} object (either a \code{ref_sf}, a \code{seg_sf}, or a \code{subset_sf}).
\item \code{sm_get()} retrieves a \code{subset_sf} object stored in a \code{segmetric} object.
\item \code{sm_inset()} operator equivalent to inner join but returns only objects
from \code{x}, or its corresponding row in \code{y} if parameter \code{return_index}
is \code{TRUE}.
}
}
